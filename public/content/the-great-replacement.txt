During the Industrial Revolution, we didn't replace horse-drawn carriages by building robot horses - we built cars. Similarly, the strengths of humans and AI are distinct. And when the big labs build AGI, this will still be true. So why are we still trying to build AI that directly substitutes human engineers?

In the next two or three years, the vast majority of workers in the tech industry will be replaced by AI. Yet the process will be much slower and messier than many at Silicon Valley may expect, due to bottlenecks that have nothing to do with intelligence at all. 

This transition will create opportunities for new players while presenting challenges for established companies. New software unicorns with single-digit employee counts will inevitably capture some market share, but they won't necessarily replace the incumbents. The incumbents have an intrinsic advantage whenever there is *any* degree of friction in migrating software from one vendor to another.  Remember, too, that tech is a tool to build something that people *want*, so understanding real customer feedback will quickly become a bottleneck. Companies that have already built rapport, connections, and understanding of their target customer base will be at an advantage. Combined, these factors will earn the incumbents time to gradually transition to a much leaner technical workforce.

The dominant tools for software engineering on the market, such as ChatGPT, Cursor, and Devin, are remarkably inadequate for fostering this transition. Cursor can effectively augment human engineers, but it won't scale to replacing organizations. And Cognition's "AI Software Engineer" product Devin is like building a robot horse - they are operating on the wrong level of abstraction by trying to fully replace the human engineer. 

There is a gap in the market here that must be filled. Incumbents will derive immense value from a tool which can incrementally decrease their engineering demands on any one narrow vertical - from QA tasks to on-call duties, feature creation to refactoring, updating unit tests to maintaining documentation. With enough verticals, the incumbents will be capable of reducing their engineering head count by a few orders of magnitude. By consistently, and gradually, simplifying the human labor into commoditized AI, the incumbents could be capable of migrating most of their software labor to AI in a matter of months, not years. And this is just what they need to stay afloat in the imminent AI revolution.